// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bftsmart.proto

/*
Package orderer is a generated protocol buffer package.

It is generated from these files:
	bftsmart.proto

It has these top-level messages:
	BftSmartMessage
	BftSmartMessageRegular
	BftSmartMessageTimeToCut
	BftSmartMessageConnect
	BftSmartMessageSynchronize
	BftProxyMessageConnect
	BftSmartMessageMetadata
	BftSmartProxy
*/
package orderer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BftSmartMessageRegular_Class int32

const (
	BftSmartMessageRegular_UNKNOWN BftSmartMessageRegular_Class = 0
	BftSmartMessageRegular_NORMAL  BftSmartMessageRegular_Class = 1
	BftSmartMessageRegular_CONFIG  BftSmartMessageRegular_Class = 2
)

var BftSmartMessageRegular_Class_name = map[int32]string{
	0: "UNKNOWN",
	1: "NORMAL",
	2: "CONFIG",
}
var BftSmartMessageRegular_Class_value = map[string]int32{
	"UNKNOWN": 0,
	"NORMAL":  1,
	"CONFIG":  2,
}

func (x BftSmartMessageRegular_Class) String() string {
	return proto.EnumName(BftSmartMessageRegular_Class_name, int32(x))
}
func (BftSmartMessageRegular_Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

type BftSmartMessageSynchronize_Class int32

const (
	BftSmartMessageSynchronize_UNKNOWN  BftSmartMessageSynchronize_Class = 0
	BftSmartMessageSynchronize_REQUEST  BftSmartMessageSynchronize_Class = 1
	BftSmartMessageSynchronize_RESPONSE BftSmartMessageSynchronize_Class = 2
)

var BftSmartMessageSynchronize_Class_name = map[int32]string{
	0: "UNKNOWN",
	1: "REQUEST",
	2: "RESPONSE",
}
var BftSmartMessageSynchronize_Class_value = map[string]int32{
	"UNKNOWN":  0,
	"REQUEST":  1,
	"RESPONSE": 2,
}

func (x BftSmartMessageSynchronize_Class) String() string {
	return proto.EnumName(BftSmartMessageSynchronize_Class_name, int32(x))
}
func (BftSmartMessageSynchronize_Class) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4, 0}
}

// bftsmartMessage is a wrapper type for the messages
// that the bftsmart-based orderer deals with.
type BftSmartMessage struct {
	// Types that are valid to be assigned to Type:
	//	*BftSmartMessage_Regular
	//	*BftSmartMessage_TimeToCut
	//	*BftSmartMessage_Connect
	//	*BftSmartMessage_Synchronize
	//	*BftSmartMessage_BftProxyConnect
	Type      isBftSmartMessage_Type `protobuf_oneof:"Type"`
	ChannelId string                 `protobuf:"bytes,6,opt,name=channelId" json:"channelId,omitempty"`
	Sender    string                 `protobuf:"bytes,7,opt,name=sender" json:"sender,omitempty"`
}

func (m *BftSmartMessage) Reset()                    { *m = BftSmartMessage{} }
func (m *BftSmartMessage) String() string            { return proto.CompactTextString(m) }
func (*BftSmartMessage) ProtoMessage()               {}
func (*BftSmartMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isBftSmartMessage_Type interface {
	isBftSmartMessage_Type()
}

type BftSmartMessage_Regular struct {
	Regular *BftSmartMessageRegular `protobuf:"bytes,1,opt,name=regular,oneof"`
}
type BftSmartMessage_TimeToCut struct {
	TimeToCut *BftSmartMessageTimeToCut `protobuf:"bytes,2,opt,name=time_to_cut,json=timeToCut,oneof"`
}
type BftSmartMessage_Connect struct {
	Connect *BftSmartMessageConnect `protobuf:"bytes,3,opt,name=connect,oneof"`
}
type BftSmartMessage_Synchronize struct {
	Synchronize *BftSmartMessageSynchronize `protobuf:"bytes,4,opt,name=synchronize,oneof"`
}
type BftSmartMessage_BftProxyConnect struct {
	BftProxyConnect *BftProxyMessageConnect `protobuf:"bytes,5,opt,name=bftProxyConnect,oneof"`
}

func (*BftSmartMessage_Regular) isBftSmartMessage_Type()         {}
func (*BftSmartMessage_TimeToCut) isBftSmartMessage_Type()       {}
func (*BftSmartMessage_Connect) isBftSmartMessage_Type()         {}
func (*BftSmartMessage_Synchronize) isBftSmartMessage_Type()     {}
func (*BftSmartMessage_BftProxyConnect) isBftSmartMessage_Type() {}

func (m *BftSmartMessage) GetType() isBftSmartMessage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *BftSmartMessage) GetRegular() *BftSmartMessageRegular {
	if x, ok := m.GetType().(*BftSmartMessage_Regular); ok {
		return x.Regular
	}
	return nil
}

func (m *BftSmartMessage) GetTimeToCut() *BftSmartMessageTimeToCut {
	if x, ok := m.GetType().(*BftSmartMessage_TimeToCut); ok {
		return x.TimeToCut
	}
	return nil
}

func (m *BftSmartMessage) GetConnect() *BftSmartMessageConnect {
	if x, ok := m.GetType().(*BftSmartMessage_Connect); ok {
		return x.Connect
	}
	return nil
}

func (m *BftSmartMessage) GetSynchronize() *BftSmartMessageSynchronize {
	if x, ok := m.GetType().(*BftSmartMessage_Synchronize); ok {
		return x.Synchronize
	}
	return nil
}

func (m *BftSmartMessage) GetBftProxyConnect() *BftProxyMessageConnect {
	if x, ok := m.GetType().(*BftSmartMessage_BftProxyConnect); ok {
		return x.BftProxyConnect
	}
	return nil
}

func (m *BftSmartMessage) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *BftSmartMessage) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BftSmartMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BftSmartMessage_OneofMarshaler, _BftSmartMessage_OneofUnmarshaler, _BftSmartMessage_OneofSizer, []interface{}{
		(*BftSmartMessage_Regular)(nil),
		(*BftSmartMessage_TimeToCut)(nil),
		(*BftSmartMessage_Connect)(nil),
		(*BftSmartMessage_Synchronize)(nil),
		(*BftSmartMessage_BftProxyConnect)(nil),
	}
}

func _BftSmartMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BftSmartMessage)
	// Type
	switch x := m.Type.(type) {
	case *BftSmartMessage_Regular:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Regular); err != nil {
			return err
		}
	case *BftSmartMessage_TimeToCut:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TimeToCut); err != nil {
			return err
		}
	case *BftSmartMessage_Connect:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Connect); err != nil {
			return err
		}
	case *BftSmartMessage_Synchronize:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Synchronize); err != nil {
			return err
		}
	case *BftSmartMessage_BftProxyConnect:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BftProxyConnect); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BftSmartMessage.Type has unexpected type %T", x)
	}
	return nil
}

func _BftSmartMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BftSmartMessage)
	switch tag {
	case 1: // Type.regular
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BftSmartMessageRegular)
		err := b.DecodeMessage(msg)
		m.Type = &BftSmartMessage_Regular{msg}
		return true, err
	case 2: // Type.time_to_cut
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BftSmartMessageTimeToCut)
		err := b.DecodeMessage(msg)
		m.Type = &BftSmartMessage_TimeToCut{msg}
		return true, err
	case 3: // Type.connect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BftSmartMessageConnect)
		err := b.DecodeMessage(msg)
		m.Type = &BftSmartMessage_Connect{msg}
		return true, err
	case 4: // Type.synchronize
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BftSmartMessageSynchronize)
		err := b.DecodeMessage(msg)
		m.Type = &BftSmartMessage_Synchronize{msg}
		return true, err
	case 5: // Type.bftProxyConnect
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BftProxyMessageConnect)
		err := b.DecodeMessage(msg)
		m.Type = &BftSmartMessage_BftProxyConnect{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BftSmartMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BftSmartMessage)
	// Type
	switch x := m.Type.(type) {
	case *BftSmartMessage_Regular:
		s := proto.Size(x.Regular)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BftSmartMessage_TimeToCut:
		s := proto.Size(x.TimeToCut)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BftSmartMessage_Connect:
		s := proto.Size(x.Connect)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BftSmartMessage_Synchronize:
		s := proto.Size(x.Synchronize)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *BftSmartMessage_BftProxyConnect:
		s := proto.Size(x.BftProxyConnect)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// BftSmartMessageRegular wraps a marshalled envelope.
type BftSmartMessageRegular struct {
	Payload   []byte                       `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	ConfigSeq uint64                       `protobuf:"varint,2,opt,name=config_seq,json=configSeq" json:"config_seq,omitempty"`
	Class     BftSmartMessageRegular_Class `protobuf:"varint,3,opt,name=class,enum=orderer.BftSmartMessageRegular_Class" json:"class,omitempty"`
}

func (m *BftSmartMessageRegular) Reset()                    { *m = BftSmartMessageRegular{} }
func (m *BftSmartMessageRegular) String() string            { return proto.CompactTextString(m) }
func (*BftSmartMessageRegular) ProtoMessage()               {}
func (*BftSmartMessageRegular) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BftSmartMessageRegular) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *BftSmartMessageRegular) GetConfigSeq() uint64 {
	if m != nil {
		return m.ConfigSeq
	}
	return 0
}

func (m *BftSmartMessageRegular) GetClass() BftSmartMessageRegular_Class {
	if m != nil {
		return m.Class
	}
	return BftSmartMessageRegular_UNKNOWN
}

// BftSmartMessageTimeToCut is used to signal to the orderers
// that it is time to cut block <block_number>.
type BftSmartMessageTimeToCut struct {
	BlockNumber uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber" json:"block_number,omitempty"`
}

func (m *BftSmartMessageTimeToCut) Reset()                    { *m = BftSmartMessageTimeToCut{} }
func (m *BftSmartMessageTimeToCut) String() string            { return proto.CompactTextString(m) }
func (*BftSmartMessageTimeToCut) ProtoMessage()               {}
func (*BftSmartMessageTimeToCut) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BftSmartMessageTimeToCut) GetBlockNumber() uint64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

// BftSmartMessageConnect is posted by an orderer upon booting up.
type BftSmartMessageConnect struct {
	Payload   []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	StartFrom uint64 `protobuf:"varint,2,opt,name=start_from,json=startFrom" json:"start_from,omitempty"`
}

func (m *BftSmartMessageConnect) Reset()                    { *m = BftSmartMessageConnect{} }
func (m *BftSmartMessageConnect) String() string            { return proto.CompactTextString(m) }
func (*BftSmartMessageConnect) ProtoMessage()               {}
func (*BftSmartMessageConnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BftSmartMessageConnect) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *BftSmartMessageConnect) GetStartFrom() uint64 {
	if m != nil {
		return m.StartFrom
	}
	return 0
}

// BftSmartMessageSynchronize is posted
type BftSmartMessageSynchronize struct {
	Payload       []byte                           `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	SyncStartFrom uint64                           `protobuf:"varint,2,opt,name=syncStartFrom" json:"syncStartFrom,omitempty"`
	MsgOffset     uint64                           `protobuf:"varint,3,opt,name=msgOffset" json:"msgOffset,omitempty"`
	BlockIndex    uint64                           `protobuf:"varint,4,opt,name=blockIndex" json:"blockIndex,omitempty"`
	Class         BftSmartMessageSynchronize_Class `protobuf:"varint,5,opt,name=class,enum=orderer.BftSmartMessageSynchronize_Class" json:"class,omitempty"`
	IsOver        bool                             `protobuf:"varint,6,opt,name=isOver" json:"isOver,omitempty"`
}

func (m *BftSmartMessageSynchronize) Reset()                    { *m = BftSmartMessageSynchronize{} }
func (m *BftSmartMessageSynchronize) String() string            { return proto.CompactTextString(m) }
func (*BftSmartMessageSynchronize) ProtoMessage()               {}
func (*BftSmartMessageSynchronize) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BftSmartMessageSynchronize) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *BftSmartMessageSynchronize) GetSyncStartFrom() uint64 {
	if m != nil {
		return m.SyncStartFrom
	}
	return 0
}

func (m *BftSmartMessageSynchronize) GetMsgOffset() uint64 {
	if m != nil {
		return m.MsgOffset
	}
	return 0
}

func (m *BftSmartMessageSynchronize) GetBlockIndex() uint64 {
	if m != nil {
		return m.BlockIndex
	}
	return 0
}

func (m *BftSmartMessageSynchronize) GetClass() BftSmartMessageSynchronize_Class {
	if m != nil {
		return m.Class
	}
	return BftSmartMessageSynchronize_UNKNOWN
}

func (m *BftSmartMessageSynchronize) GetIsOver() bool {
	if m != nil {
		return m.IsOver
	}
	return false
}

// used when the bftproxy connect to replica
type BftProxyMessageConnect struct {
	Orderer string `protobuf:"bytes,1,opt,name=orderer" json:"orderer,omitempty"`
}

func (m *BftProxyMessageConnect) Reset()                    { *m = BftProxyMessageConnect{} }
func (m *BftProxyMessageConnect) String() string            { return proto.CompactTextString(m) }
func (*BftProxyMessageConnect) ProtoMessage()               {}
func (*BftProxyMessageConnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *BftProxyMessageConnect) GetOrderer() string {
	if m != nil {
		return m.Orderer
	}
	return ""
}

// LastOffsetPersisted is the encoded value for the Metadata message
// which is encoded in the ORDERER block metadata index for the case
// of the BftSmart-based orderer.
type BftSmartMessageMetadata struct {
	BlockIndex uint64 `protobuf:"varint,1,opt,name=blockIndex" json:"blockIndex,omitempty"`
	MsgOffset  uint64 `protobuf:"varint,2,opt,name=msgOffset" json:"msgOffset,omitempty"`
}

func (m *BftSmartMessageMetadata) Reset()                    { *m = BftSmartMessageMetadata{} }
func (m *BftSmartMessageMetadata) String() string            { return proto.CompactTextString(m) }
func (*BftSmartMessageMetadata) ProtoMessage()               {}
func (*BftSmartMessageMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BftSmartMessageMetadata) GetBlockIndex() uint64 {
	if m != nil {
		return m.BlockIndex
	}
	return 0
}

func (m *BftSmartMessageMetadata) GetMsgOffset() uint64 {
	if m != nil {
		return m.MsgOffset
	}
	return 0
}

type BftSmartProxy struct {
	Offset   uint64           `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	BfgMsg   *BftSmartMessage `protobuf:"bytes,2,opt,name=bfgMsg" json:"bfgMsg,omitempty"`
	NeedSync bool             `protobuf:"varint,3,opt,name=needSync" json:"needSync,omitempty"`
}

func (m *BftSmartProxy) Reset()                    { *m = BftSmartProxy{} }
func (m *BftSmartProxy) String() string            { return proto.CompactTextString(m) }
func (*BftSmartProxy) ProtoMessage()               {}
func (*BftSmartProxy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *BftSmartProxy) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *BftSmartProxy) GetBfgMsg() *BftSmartMessage {
	if m != nil {
		return m.BfgMsg
	}
	return nil
}

func (m *BftSmartProxy) GetNeedSync() bool {
	if m != nil {
		return m.NeedSync
	}
	return false
}

func init() {
	proto.RegisterType((*BftSmartMessage)(nil), "orderer.BftSmartMessage")
	proto.RegisterType((*BftSmartMessageRegular)(nil), "orderer.BftSmartMessageRegular")
	proto.RegisterType((*BftSmartMessageTimeToCut)(nil), "orderer.BftSmartMessageTimeToCut")
	proto.RegisterType((*BftSmartMessageConnect)(nil), "orderer.BftSmartMessageConnect")
	proto.RegisterType((*BftSmartMessageSynchronize)(nil), "orderer.BftSmartMessageSynchronize")
	proto.RegisterType((*BftProxyMessageConnect)(nil), "orderer.BftProxyMessageConnect")
	proto.RegisterType((*BftSmartMessageMetadata)(nil), "orderer.BftSmartMessageMetadata")
	proto.RegisterType((*BftSmartProxy)(nil), "orderer.BftSmartProxy")
	proto.RegisterEnum("orderer.BftSmartMessageRegular_Class", BftSmartMessageRegular_Class_name, BftSmartMessageRegular_Class_value)
	proto.RegisterEnum("orderer.BftSmartMessageSynchronize_Class", BftSmartMessageSynchronize_Class_name, BftSmartMessageSynchronize_Class_value)
}

func init() { proto.RegisterFile("bftsmart.proto", fileDescriptor0) }

var fileDescriptor3 = []byte{
	// 643 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0xdb, 0x4e, 0xdb, 0x40,
	0x10, 0x4d, 0x42, 0xae, 0x13, 0x2e, 0xd1, 0x3e, 0x50, 0x0b, 0xf5, 0x02, 0x6e, 0x91, 0xa8, 0x84,
	0x9c, 0x8a, 0x3e, 0xa2, 0xaa, 0x2a, 0x51, 0xb8, 0x88, 0xc6, 0x81, 0x75, 0x10, 0x52, 0x5f, 0x22,
	0x5f, 0xc6, 0x8e, 0xd5, 0xd8, 0x1b, 0x76, 0x37, 0x15, 0xe9, 0xf7, 0xf0, 0x19, 0xfd, 0xb8, 0xca,
	0x6b, 0x9b, 0x4b, 0x42, 0x68, 0xdf, 0x32, 0xe3, 0x33, 0x27, 0x33, 0xe7, 0x1c, 0x2d, 0xac, 0x3b,
	0xbe, 0x14, 0x91, 0xcd, 0xa5, 0x31, 0xe1, 0x4c, 0x32, 0x52, 0x63, 0xdc, 0x43, 0x8e, 0x5c, 0xbf,
	0x5b, 0x81, 0x8d, 0x23, 0x5f, 0x5a, 0xc9, 0xb7, 0x1e, 0x0a, 0x61, 0x07, 0x48, 0x0e, 0xa1, 0xc6,
	0x31, 0x98, 0x8e, 0x6d, 0xae, 0x15, 0xb7, 0x8b, 0x7b, 0xcd, 0x83, 0x77, 0x46, 0x06, 0x37, 0xe6,
	0xa0, 0x34, 0x85, 0x9d, 0x16, 0x68, 0x3e, 0x41, 0x3a, 0xd0, 0x94, 0x61, 0x84, 0x43, 0xc9, 0x86,
	0xee, 0x54, 0x6a, 0x25, 0x45, 0xb0, 0xb3, 0x8c, 0x60, 0x10, 0x46, 0x38, 0x60, 0x9d, 0xa9, 0x3c,
	0x2d, 0xd0, 0x86, 0xcc, 0x8b, 0x64, 0x03, 0x97, 0xc5, 0x31, 0xba, 0x52, 0x5b, 0x79, 0x79, 0x83,
	0x4e, 0x0a, 0x4b, 0x36, 0xc8, 0x26, 0xc8, 0x09, 0x34, 0xc5, 0x2c, 0x76, 0x47, 0x9c, 0xc5, 0xe1,
	0x6f, 0xd4, 0xca, 0x8a, 0xe0, 0xfd, 0x32, 0x02, 0xeb, 0x01, 0x7a, 0x5a, 0xa0, 0x8f, 0x27, 0xc9,
	0x39, 0x6c, 0x38, 0xbe, 0xbc, 0xe0, 0xec, 0x76, 0x96, 0xfd, 0x8d, 0x56, 0x59, 0xdc, 0x46, 0x7d,
	0x5f, 0xd8, 0x66, 0x7e, 0x92, 0xbc, 0x86, 0x86, 0x3b, 0xb2, 0xe3, 0x18, 0xc7, 0x67, 0x9e, 0x56,
	0xdd, 0x2e, 0xee, 0x35, 0xe8, 0x43, 0x83, 0x6c, 0x42, 0x55, 0x60, 0xec, 0x21, 0xd7, 0x6a, 0xea,
	0x53, 0x56, 0x1d, 0x55, 0xa1, 0x3c, 0x98, 0x4d, 0x50, 0xff, 0x53, 0x84, 0xcd, 0xe7, 0xb5, 0x27,
	0x1a, 0xd4, 0x26, 0xf6, 0x6c, 0xcc, 0x6c, 0x4f, 0xb9, 0xb5, 0x4a, 0xf3, 0x92, 0xbc, 0x01, 0x70,
	0x59, 0xec, 0x87, 0xc1, 0x50, 0xe0, 0x8d, 0x72, 0xa2, 0x4c, 0x1b, 0x69, 0xc7, 0xc2, 0x1b, 0x72,
	0x08, 0x15, 0x77, 0x6c, 0x0b, 0xa1, 0x24, 0x5e, 0x3f, 0xd8, 0xfd, 0x87, 0xc9, 0x46, 0x27, 0x01,
	0xd3, 0x74, 0x46, 0xdf, 0x87, 0x8a, 0xaa, 0x49, 0x13, 0x6a, 0x57, 0xe6, 0xb9, 0xd9, 0xbf, 0x36,
	0x5b, 0x05, 0x02, 0x50, 0x35, 0xfb, 0xb4, 0xf7, 0xed, 0x7b, 0xab, 0x98, 0xfc, 0xee, 0xf4, 0xcd,
	0xe3, 0xb3, 0x93, 0x56, 0x49, 0xff, 0x02, 0xda, 0x32, 0xe3, 0xc9, 0x0e, 0xac, 0x3a, 0x63, 0xe6,
	0xfe, 0x1c, 0xc6, 0xd3, 0xc8, 0xc1, 0x34, 0x72, 0x65, 0xda, 0x54, 0x3d, 0x53, 0xb5, 0xf4, 0xcb,
	0x85, 0xe3, 0x73, 0x55, 0x5f, 0x3c, 0x5e, 0x48, 0x9b, 0xcb, 0xa1, 0xcf, 0x59, 0x94, 0x1f, 0xaf,
	0x3a, 0xc7, 0x9c, 0x45, 0xfa, 0x5d, 0x09, 0xb6, 0x96, 0x27, 0xe1, 0x05, 0xde, 0x0f, 0xb0, 0x96,
	0x64, 0xc4, 0xca, 0x99, 0x32, 0xea, 0xa7, 0xcd, 0xc4, 0xed, 0x48, 0x04, 0x7d, 0xdf, 0x17, 0x98,
	0x46, 0xb8, 0x4c, 0x1f, 0x1a, 0xe4, 0x2d, 0x80, 0x3a, 0xef, 0x2c, 0xf6, 0xf0, 0x56, 0x05, 0xb4,
	0x4c, 0x1f, 0x75, 0xc8, 0xd7, 0xdc, 0x99, 0x8a, 0x72, 0xe6, 0xe3, 0x7f, 0x64, 0xf7, 0x89, 0x3b,
	0x49, 0x9c, 0x42, 0xd1, 0xff, 0x85, 0x5c, 0x25, 0xad, 0x4e, 0xb3, 0x4a, 0x6f, 0x3f, 0xeb, 0x5a,
	0x13, 0x6a, 0xb4, 0x7b, 0x79, 0xd5, 0xb5, 0x06, 0xad, 0x22, 0x59, 0x85, 0x3a, 0xed, 0x5a, 0x17,
	0x7d, 0xd3, 0xea, 0xb6, 0x4a, 0xfa, 0x81, 0x52, 0xfe, 0x99, 0x88, 0x27, 0x0a, 0x65, 0x5b, 0x29,
	0x85, 0x1a, 0xf4, 0xfe, 0x49, 0xb9, 0x86, 0x57, 0x73, 0x7b, 0xf6, 0x50, 0xda, 0x9e, 0x2d, 0xed,
	0xb9, 0xc3, 0x8b, 0x0b, 0x87, 0x3f, 0x91, 0xad, 0x34, 0x27, 0x9b, 0x3e, 0x85, 0xb5, 0x9c, 0x58,
	0x6d, 0x94, 0x9c, 0xc9, 0x52, 0x6c, 0x4a, 0x95, 0x55, 0xe4, 0x13, 0x54, 0x1d, 0x3f, 0xe8, 0x89,
	0x20, 0x7b, 0x7e, 0xb4, 0xa5, 0xd1, 0xce, 0x70, 0x64, 0x0b, 0xea, 0x31, 0xa2, 0x97, 0x08, 0xaa,
	0xec, 0xaa, 0xd3, 0xfb, 0xfa, 0xe8, 0x0a, 0x76, 0x19, 0x0f, 0x8c, 0xd1, 0x6c, 0x82, 0x7c, 0x8c,
	0x5e, 0x80, 0xdc, 0xf0, 0x6d, 0x87, 0x87, 0x6e, 0xfa, 0x96, 0x8a, 0x9c, 0xfc, 0xc7, 0x7e, 0x10,
	0xca, 0xd1, 0xd4, 0x31, 0x5c, 0x16, 0xb5, 0x1f, 0xa1, 0xdb, 0x29, 0xba, 0x9d, 0xa2, 0xdb, 0x19,
	0xda, 0xa9, 0xaa, 0xfa, 0xf3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x1f, 0x98, 0xe9, 0x9b,
	0x05, 0x00, 0x00,
}
